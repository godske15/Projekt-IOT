version: "3.9"

services:
  questdb:
    build:
      context: ./QuestDB
      dockerfile: Dockerfile
    container_name: questdb
    restart: always
    ports:
      - "9000:9000"   # Web UI / REST
      - "9009:9009"   # InfluxDB Line protocol
      - "8812:8812"   # Postgres wire
      - "9003:9003"   # Metrics / health
    volumes:
      - questdb-storage:/root/.questdb
    environment:
      - QDB_LOG_W_STDOUT_LEVEL=ERROR
      - QDB_LOG_W_FILE_LEVEL=ERROR
      - QDB_LOG_W_HTTP_MIN_LEVEL=ERROR
      - QDB_SHARED_WORKER_COUNT=2
      - QDB_TELEMETRY_ENABLED=false
    healthcheck:
      test: ["CMD", "curl", "-v", "http://127.0.0.1:9003"]
      interval: 30s
      timeout: 4s
      start_period: 40s
      retries: 3
    networks:
      - iot-net

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: fastapi-app
    depends_on:
      questdb:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - QUESTDB_HOST=questdb
      - QUESTDB_PORT=8812
    volumes:
      - ./fastapi:/app
    command: uvicorn mainapi:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - iot-net

  mqtt:
    build:
      context: ./mqtt
      dockerfile: Dockerfile
    container_name: mqtt-broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/logs:/mosquitto/log
    networks:
      - iot-net
    restart: unless-stopped

  mqtt-subscriber:
    build:
      context: ./mqtt
      dockerfile: Dockerfile_client
    container_name: mqtt-subscriber
    depends_on:
      - mqtt
      - fastapi
    networks:
      - iot-net

volumes:
  questdb-storage:
    external: true

networks:
  iot-net:
    driver: bridge
